#!/bin/bash
# compute sin values
RFOLDER="./results/$(uname -n)"

if [ ! -d $RFOLDER ];
then
	mkdir $RFOLDER
fi

echo $(uname -m) > $RFOLDER/machine-arch.txt

SAVE_PERF=0
SAVE_CSV=0

# determine if user wants to save output and/or perf results
for a in $@
do
	if [ $a == perf ];
	then
		SAVE_PERF=1
	fi

	if [ $a == csv ];
	then
		SAVE_CSV=1
	fi
done

# compile up to 7 taylor series terms
for i in {1..7}; 
do
	make CFLAGS=-DSIN_TAYLOR_N=$i >> /dev/null

	# gather the results for each test
	for j in test-*.bin;
	do
		OFILE_BASE="$(basename $j .bin)-sin-$i"

		# save test output
		if [ $SAVE_CSV == 1 ];
		then
			# create output folder if it doesn't already exist
			if [ ! -d "$RFOLDER/output" ];
			then
				mkdir -p $RFOLDER/output;
			fi
			
			printf "Getting sin output from $j with $i Taylor series terms\n"

			./$j sin display > "$RFOLDER"/output/output-"$OFILE_BASE".csv;
		fi

		# save perf results
		if [ $SAVE_PERF == 1 ];
		then

			# create output folder if it doesn't already exist
			if [ ! -d "$RFOLDER/perf" ];
			then
				mkdir -p $RFOLDER/perf;
			fi
			
			OFILE_PERF="$RFOLDER"/perf/perf-"$OFILE_BASE".txt;

			rm -f "$OFILE_PERF";

			# benchmark the performance 10 times to filter out noise
			for k in {01..10};
			do
				printf "Running $j with $i Taylor series terms, test $k: "

				printf "TEST $k\n"  >> "$OFILE_PERF"

				printf "L1 Cache - "
				if [ $(uname -m) == armv7l ];
				then
					perf_5.10 stat -o "$OFILE_PERF" \
						--append -e instructions:u,L1-icache-load-misses:u \
						-e L1-dcache-loads:u,L1-dcache-load-misses:u ./$j sin;

				else				
					perf stat -o "$OFILE_PERF" \
						--append -e instructions:u,L1-icache-load-misses:u \
						-e L1-dcache-loads:u,L1-dcache-load-misses:u ./$j sin;
				fi
				printf "DONE"


				if [ $(uname -m) == x86_64 ];
				then
					printf ", Energy - "

					perf stat -o "$OFILE_PERF" \
						--append -e power/energy-pkg/ ./$j sin;
					
					printf "DONE"
				fi
				printf "\n"

				printf -- "--------------------------------------------------------------------------------\n\n" >> "$OFILE_PERF";
			done
		fi
	done
done
